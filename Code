#                                                            SPACE DEFENDER 

# all imports
import pygame
import random
import math
from pygame import mixer 


# initialize the pygame
pygame.init()

# show screen
screen = pygame.display.set_mode((800, 600))

# bg sound
mixer.music.load("bg_music(x).wav")
mixer.music.play(-1)


# title & icon of window
pygame.display.set_caption("space invaders")
icon = pygame.image.load("SPACE INVADERS.jpg")
pygame.display.set_icon(icon)

bg_img = pygame.image.load("background(5).jpg")


# score
score_val = 0
font = pygame.font.Font('freesansbold.ttf', 32)
textX = 0
textY = 10


large_font = pygame.font.Font('freesansbold.ttf', 64)
med_font = pygame.font.Font('freesansbold.ttf', 32)
# player
player_img = pygame.image.load("player03.png")
playerX = 370
playerY = 480
Player_X_Change = 0
Player_Y_Change = 0


num_enemy = 9
enemy_img = []
enemyX = []
enemyY = []
Enemy_X_Change = []
Enemy_Y_Change = []

i=0
for i in range (num_enemy):

    enemy_img.append(pygame.image.load("enemy02.png"))
    enemyX.append(random.randint(0,730))
    enemyY.append(random.randint(50, 150))
    Enemy_X_Change.append(1)                     # 0.1
    Enemy_Y_Change.append(30)

# bullet
bullet_img = pygame.image.load("new_bullet.png")
bulletX = 0
bulletY = 480
Bullet_X_Change = 0
Bullet_Y_Change = 15     # 2
bullet_state = "ready"





def player(x,y):
    screen.blit(player_img, (x, y))


def enemy(x,y,i):
    screen.blit(enemy_img[i], (x, y))


def fire_bullet(x,y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bullet_img, (x+16, y+10))


def collision(enemyX, enemyY, bulletX, bulletY):
        
    dist = math.sqrt((math.pow(enemyX-bulletX, 2)) + (math.pow(enemyY-bulletY, 2)))
    if dist < 27:
        return True
    else:
        return False


def show_score(x,y):
    score = font.render("SCORE: " + str(score_val), True, (255, 255, 255))
    screen.blit(score, (x,y))

def game_over(score_val):
    game_over_text = large_font.render("GAME OVER", True, (255, 255, 255))
    screen.blit(game_over_text, (200, 250))
    text_01 = med_font.render("SCORE: " + str(score_val), True, (255, 255, 255))
    screen.blit(text_01, (200, 300))



high_score = None

# Game loop
clock = pygame.time.Clock()

    
        
running = True
while running:
    clock.tick(60)
    screen.fill((0, 0 ,0))
     
    screen.blit(bg_img, (0,0)) 
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                Player_X_Change = -10  # -1

            if event.key == pygame.K_RIGHT:
                Player_X_Change = 10   # 1
            
            if event.key == pygame.K_SPACE:
                if bullet_state == 'ready':
                    bullet_sound = mixer.Sound("laser-sound-2.wav")
                    bullet_sound.play()
                    
                    bulletX = playerX                   #     get player coordinates
                    fire_bullet(bulletX, playerY)
                    
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                Player_X_Change = 0

        



                 
     
    
    
    # player movement
    playerX += Player_X_Change
    if playerX <= 0:
        playerX = 0
    
    elif playerX >= 736:        #  800px - 64px = 736px
        playerX = 736
    



    # enemy movement
    for i in range (num_enemy):

        # game over
        if enemyY[i] > 450 :
            for j in range (num_enemy):
                enemyY[j] = 2000
            game_over(score_val)
            
            break 


        enemyX[i] += Enemy_X_Change[i]


        if enemyX[i] <= 0:
            Enemy_X_Change[i] = 5     # 0.4
            enemyY[i] += Enemy_Y_Change[i]
    
        elif enemyX[i] >= 736:        #  800px - 64px = 736px
            Enemy_X_Change[i] = -5         # 0.4
            enemyY[i] += Enemy_Y_Change[i]

        # collision
        col = collision(enemyX[i], enemyY[i], bulletX, bulletY)
        if col:
            exp_sound = mixer.Sound("explosion(3).wav")
            exp_sound.play()
            bulletY = 480
            bullet_state = "ready"
            enemyX[i] = random.randint(0,735)
            enemyY[i] = random.randint(50, 150)
            score_val += 1
        enemy(enemyX[i], enemyY[i], i)




    # bullet movement
    if bulletY <= 0:
         bulletY = 480
         bullet_state = "ready"
    
    if bullet_state == "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= Bullet_Y_Change 
     
    

    player(playerX, playerY)

    show_score(textX, textY)


    pygame.display.update()
